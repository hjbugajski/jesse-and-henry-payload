/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export type FieldLinkArray =
  | {
      text: string;
      icon?: string | null;
      type: 'internal' | 'external';
      relationship?: (string | null) | Page;
      anchor?: string | null;
      url?: string | null;
      rel?: 'noreferrer'[] | null;
      newTab?: boolean | null;
      id?: string | null;
    }[]
  | null;

export interface Config {
  collections: {
    guests: Guest;
    media: Media;
    pages: Page;
    parties: Party;
    relations: Relation;
    sides: Side;
    users: User;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  globals: {
    navigation: Navigation;
  };
}
export interface Guest {
  id: string;
  first?: string | null;
  middle?: string | null;
  last?: string | null;
  party?: (string | null) | Party;
  side?: (string | null) | Side;
  relation?: (string | null) | Relation;
  phone?: string | null;
  address?: string | null;
  rsvpWelcomeParty?: ('accept' | 'decline') | null;
  rsvpRehearsalDinner?: ('accept' | 'decline') | null;
  rsvpWeddingDay?: ('accept' | 'decline') | null;
  rsvpPoolDay?: ('accept' | 'decline') | null;
  transportationToVenue?: ('yes' | 'no') | null;
  transportationFromVenue?: ('yes' | 'no') | null;
  legalName?: string | null;
  dateOfBirth?: string | null;
  countryOfBirth?: string | null;
  allergies?: string | null;
  sort?: number | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password: string | null;
}
export interface Party {
  id: string;
  value: string;
  color?: ('green' | 'teal' | 'cyan' | 'blue' | 'violet' | 'purple' | 'plum' | 'pink' | 'red' | 'orange') | null;
  sort?: number | null;
  code?: string | null;
  updatedAt: string;
  createdAt: string;
}
export interface Side {
  id: string;
  value: string;
  color?: ('green' | 'teal' | 'cyan' | 'blue' | 'violet' | 'purple' | 'plum' | 'pink' | 'red' | 'orange') | null;
  sort?: number | null;
  updatedAt: string;
  createdAt: string;
}
export interface Relation {
  id: string;
  value: string;
  color?: ('green' | 'teal' | 'cyan' | 'blue' | 'violet' | 'purple' | 'plum' | 'pink' | 'red' | 'orange') | null;
  sort?: number | null;
  updatedAt: string;
  createdAt: string;
}
export interface Media {
  id: string;
  alt: string;
  dataUrl?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  sizes?: {
    preview?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
export interface Page {
  id: string;
  title: string;
  description: string;
  content?: {
    root: {
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      type: string;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  slug?: string | null;
  protected?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
export interface User {
  id: string;
  roles: ('admin' | 'public')[];
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password: string | null;
}
export interface PayloadPreference {
  id: string;
  user:
    | {
        relationTo: 'guests';
        value: string | Guest;
      }
    | {
        relationTo: 'users';
        value: string | User;
      };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
export interface Navigation {
  id: string;
  links?: FieldLinkArray;
  showCta?: boolean | null;
  callToAction?: FieldLinkGroup;
  updatedAt?: string | null;
  createdAt?: string | null;
}
export interface FieldLinkGroup {
  text: string;
  icon?: string | null;
  type: 'internal' | 'external';
  relationship?: (string | null) | Page;
  anchor?: string | null;
  url?: string | null;
  rel?: 'noreferrer'[] | null;
  newTab?: boolean | null;
  color: 'neutral' | 'neutral-variant' | 'primary' | 'secondary' | 'tertiary' | 'danger';
}

declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}
